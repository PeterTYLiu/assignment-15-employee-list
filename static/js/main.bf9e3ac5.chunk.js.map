{"version":3,"sources":["components/TableRow.js","components/Table.js","App.js","index.js"],"names":["TableRow","employee","id","name","position","location","Table","employees","handleSort","handleFilter","searchTerm","sortColumn","prevSortDirection","target","columnName","innerHTML","toLowerCase","classList","contains","document","querySelectorAll","forEach","th","remove","add","type","placeholder","value","style","width","onChange","onClick","map","key","length","colspan","textAlign","color","padding","handleEmpty","App","useState","sortedEmployees","setSortedEmployees","setSearchTerm","className","margin","column","isIncreasing","console","log","newlySortedEmployees","sort","a","b","toUpperCase","filter","includes","ReactDOM","render","getElementById"],"mappings":"mMAaeA,MAXf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,4BACE,4BAAKA,EAASC,IACd,4BAAKD,EAASE,MACd,4BAAKF,EAASG,UACd,4BAAKH,EAASI,YCkELC,MAvEf,YAAqE,IAApDC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACpD,SAASC,EAAT,GAAiC,IAE3BC,EAFgBC,EAAU,EAAVA,OAChBC,EAAaD,EAAOE,UAAUC,cAE9BH,EAAOI,UAAUC,SAAS,yBAC5BN,EAAoB,cAClBC,EAAOI,UAAUC,SAAS,yBAC5BN,EAAoB,cACtBO,SACGC,iBAAiB,MACjBC,SAAQ,SAACC,GAAD,OACPA,EAAGL,UAAUM,OACX,WACA,sBACA,0BAGNV,EAAOI,UAAUO,IAAI,YAEK,eAAtBZ,GACFJ,EAAWM,GAAY,GACvBD,EAAOI,UAAUO,IAAI,yBAErBhB,EAAWM,GAAY,GACvBD,EAAOI,UAAUO,IAAI,wBAkBzB,OACE,6BACE,2BACEC,KAAK,OACLC,YAAY,0BACZC,MAAOjB,EACPkB,MAAO,CAAEC,MAAO,QAChBC,SAAUrB,IAEZ,2BAAOmB,MAAO,CAAEC,MAAO,SACrB,+BACE,4BACE,wBAAIE,QAASpB,GAAb,MACA,wBAAIoB,QAASpB,GAAb,QACA,wBAAIoB,QAASpB,GAAb,YACA,wBAAIoB,QAASpB,GAAb,cAGJ,+BACGJ,EAAUyB,KAAI,SAAC/B,GAAD,OACb,kBAAC,EAAD,CAAUA,SAAUA,EAAUgC,IAAKhC,EAASC,QAlCtD,WACE,IAAKK,EAAU2B,OACb,OACE,4BACE,wBACEC,QAAQ,IACRP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,OAAQC,QAAS,SAFxD,qBAgCCC,O,OCRIC,MAvDf,WAAgB,IAAD,EACiCC,mBAASlC,KAD1C,mBACNmC,EADM,KACWC,EADX,OAEuBF,mBAAS,IAFhC,mBAEN/B,EAFM,KAEMkC,EAFN,KA0Cb,OACE,yBAAKC,UAAU,aACb,wBAAIjB,MAAO,CAAEkB,OAAQ,cAArB,aACA,kBAAC,EAAD,CACEvC,UAAWmC,EACXlC,WA3CN,SAAoBuC,EAAQC,GAC1BC,QAAQC,IAAR,qBAA0BH,EAA1B,6BAAqDC,IACrD,IAAIG,EAAoB,YAAOT,GAa/BS,EAAuBA,EAAqBC,MAX5C,SAAuBC,EAAGC,GAOxB,OANAD,EAAIA,EAAEN,GACNO,EAAIA,EAAEP,GACW,kBAANM,IACTA,EAAEE,cACFD,EAAEC,eAEAP,EAAqBK,EAAIC,EAAI,GAAK,EAC/BA,EAAID,EAAI,GAAK,KAKtBV,EAAmBQ,IA2Bf1C,aAxBN,YAAmC,IAAXI,EAAU,EAAVA,OACtB+B,EAAc/B,EAAOc,OACrBsB,QAAQC,IAAR,6CAAkDrC,EAAOc,MAAzD,MACA,IAAIwB,EAAuB5C,IAAUiD,QAAO,SAACvD,GAAD,OAC1CA,EAASE,KAAKa,cAAcyC,SAAS5C,EAAOc,MAAMX,kBAEpD2B,EAAmBQ,GACnBhC,SACGC,iBAAiB,MACjBC,SAAQ,SAACC,GAAD,OACPA,EAAGL,UAAUM,OACX,WACA,sBACA,2BAYFb,WAAYA,M,MChDpBgD,IAASC,OAAO,kBAAC,EAAD,MAASxC,SAASyC,eAAe,U","file":"static/js/main.bf9e3ac5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TableRow({ employee }) {\n  return (\n    <tr>\n      <td>{employee.id}</td>\n      <td>{employee.name}</td>\n      <td>{employee.position}</td>\n      <td>{employee.location}</td>\n    </tr>\n  );\n}\n\nexport default TableRow;\n","import React from \"react\";\nimport TableRow from \"./TableRow\";\n\nfunction Table({ employees, handleSort, handleFilter, searchTerm }) {\n  function sortColumn({ target }) {\n    let columnName = target.innerHTML.toLowerCase();\n    let prevSortDirection;\n    if (target.classList.contains(\"isSorted-increasing\"))\n      prevSortDirection = \"increasing\";\n    if (target.classList.contains(\"isSorted-decreasing\"))\n      prevSortDirection = \"decreasing\";\n    document\n      .querySelectorAll(\"th\")\n      .forEach((th) =>\n        th.classList.remove(\n          \"isSorted\",\n          \"isSorted-increasing\",\n          \"isSorted-decreasing\"\n        )\n      );\n    target.classList.add(\"isSorted\");\n\n    if (prevSortDirection === \"increasing\") {\n      handleSort(columnName, false);\n      target.classList.add(\"isSorted-decreasing\");\n    } else {\n      handleSort(columnName, true);\n      target.classList.add(\"isSorted-increasing\");\n    }\n  }\n\n  function handleEmpty() {\n    if (!employees.length)\n      return (\n        <tr>\n          <td\n            colspan=\"4\"\n            style={{ textAlign: \"center\", color: \"#aaa\", padding: \"2rem\" }}\n          >\n            No results found\n          </td>\n        </tr>\n      );\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Filter by employee name\"\n        value={searchTerm}\n        style={{ width: \"100%\" }}\n        onChange={handleFilter}\n      />\n      <table style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th onClick={sortColumn}>ID</th>\n            <th onClick={sortColumn}>Name</th>\n            <th onClick={sortColumn}>Position</th>\n            <th onClick={sortColumn}>Location</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map((employee) => (\n            <TableRow employee={employee} key={employee.id} />\n          ))}\n          {handleEmpty()}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport Table from \"./components/Table\";\nimport { employees } from \"./employees.json\";\n\nfunction App() {\n  const [sortedEmployees, setSortedEmployees] = useState(employees);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function handleSort(column, isIncreasing) {\n    console.log(`Sorting by ${column}, isIncreasing is ${isIncreasing}`);\n    let newlySortedEmployees = [...sortedEmployees];\n\n    function compareValues(a, b) {\n      a = a[column];\n      b = b[column];\n      if (typeof a === \"string\") {\n        a.toUpperCase();\n        b.toUpperCase();\n      }\n      if (isIncreasing) return a > b ? 1 : -1;\n      return b > a ? 1 : -1;\n    }\n\n    newlySortedEmployees = newlySortedEmployees.sort(compareValues);\n\n    setSortedEmployees(newlySortedEmployees);\n  }\n\n  function handleFilter({ target }) {\n    setSearchTerm(target.value);\n    console.log(`Filter employees by name contains \"${target.value}\"`);\n    let newlySortedEmployees = employees.filter((employee) =>\n      employee.name.toLowerCase().includes(target.value.toLowerCase())\n    );\n    setSortedEmployees(newlySortedEmployees);\n    document\n      .querySelectorAll(\"th\")\n      .forEach((th) =>\n        th.classList.remove(\n          \"isSorted\",\n          \"isSorted-increasing\",\n          \"isSorted-decreasing\"\n        )\n      );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 style={{ margin: \"4rem 0rem\" }}>Employees</h1>\n      <Table\n        employees={sortedEmployees}\n        handleSort={handleSort}\n        handleFilter={handleFilter}\n        searchTerm={searchTerm}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}